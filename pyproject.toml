[tool.poetry]
name = "fastapi-key-auth"
version = "0.14.0"
description = "API key validation Middleware"
authors = ["Benjamin Ramser <legionaerr@googlemail.com>"]
license = "MIT"
readme = "readme.md"
homepage = "https://github.com/iwpnd/fastapi-key-auth"
repository = "https://github.com/iwpnd/fastapi-key-auth"
keywords = ["fastapi", "api key", "security"]


[tool.poetry.dependencies]
python = "^3.9"
fastapi = ">=0.100.0"
starlette = ">=0.25.0"
python-semantic-release = "7.33.1"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
pre-commit = ">=2.21,<4.0"
black = "^23.1.0"
gitlint = "^0.19.0"
poethepoet = ">=0.18.1,<0.25.0"
isort = "^5.11.5"
pytest-cov = "^4.0.0"
requests = "^2.28.2"
mypy = "^1.1.1"
python-semantic-release = ">=7.33.1,<9.0.0"
httpx = ">=0.23.3,<0.26.0"
ruff = ">=0.0.261,<0.1.10"

[mypy]
python_version = 3.9
ignore_missing_imports = true

[tool.ruff]
line-length = 88

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = ["E501"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9.
target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.semantic_release]
version_variable = [
    "fastapi_key_auth/__init__.py:__version__",
    "pyproject.toml:version"
]
commit_subject = "ci: release v{version}"
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"

[tool.poe.tasks]
test       = "poetry run pytest -vv -s tests/"
test-cov   = "poetry run pytest -vv -s --cov=fastapi_key_auth tests/"
mypy       = "poetry run mypy --ignore-missing-imports --config-file pyproject.toml"
lint       = "ruff ."
publish		 = "poetry run semantic-release publish"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
