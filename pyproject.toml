[project]
name = "fastapi-key-auth"
version = "0.15.5"
description = "API key validation Middleware"
license = "MIT"
readme = "readme.md"
homepage = "https://github.com/iwpnd/fastapi-key-auth"
repository = "https://github.com/iwpnd/fastapi-key-auth"
keywords = ["fastapi", "api key", "security"]
authors = [{ name = "Benjamin Ramser", email = "iwpnd@posteo.de" }]
requires-python = ">=3.9,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.100.0",
    "starlette>=0.25.0",
]

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.22.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.9.2",
    "gitlint>=0.19.1",
    "python-semantic-release>=9.21.0",
    "httpx>=0.28.1"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.deptry]
ignore = ["DEP003", "DEP004"]

[tool.mypy]
files = ["src"]
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # long messages outside exception class
    "TRY003",
    # mutable data structures on init
    "B006",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"__init__.py" = ["F401", "F403"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]

[tool.semantic_release]
version_variables = [
    "src/fastapi_key_auth/__init__.py:__version__",
    "pyproject.toml:version",
]
commit_message = "ci: release v{version}"
branch = "main"
upload_to_release = true
build_command = "pip install uv && uv build"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "docs"]

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore\\(release\\):",
  "chore\\(deps-dev\\):",
  "build\\(deps-dev\\):",
  "build\\(deps\\):",
  "ci:",
]

[tool.basedpyright]
reportUnknownParameterType = false
reportCallInDefaultInitializer = false
typeCheckingMode = "standard"
